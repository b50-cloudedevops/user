DevOps321
1) we are going to generate a key pair(pub key+pri key)
2)public key we will place it on server(lock to your home)
3) private key in your computer(key to your lock)

ssh centos@35.173.200.172

Git Token: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

centos/ DevOps321


Web server : Apache web service
Application server: Apache tomcat service
Database Server: Maria DB

ProxyPass "/student" "http://172.31.28.203:8080/student"
ProxyPassReverse "/student"  "http://172.31.28.203:8080/student"


<Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource"
               maxTotal="100" maxIdle="30" maxWaitMillis="10000"
               username="student" password="student1" driverClassName="com.mysql.jdbc.Driver"
               url="jdbc:mysql://studentapp.c1emrsm5ncb9.us-east-1.rds.amazonaws.com:3306/studentapp"/>

location /student/ {
    proxy_pass http://www.example.com/link/;
}

Git Token: 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



#!/bin/bash 

# AMI_ID="ami-00ff427d936335825"

# If1 $ is empty or $1 is not supplied, then I want to mark it as failure.
if [ -z  "$1" ] ; then 
    echo -e "\e[31m Machine Name Is Missing \e[0m"
    exit 1
fi 

COMPONENT=$1
ZONEID="Z0175006XAWHYA3OXLXM"
AMI_ID=$(aws ec2 describe-images  --filters "Name=name,Values=DevOps-LabImage-CentOS7"  | jq '.Images[].ImageId' | sed -e 's/"//g')
SGID="sg-0c45f649a0dc57860"

echo "The AMI which we are using is $AMI_ID"
create-server() {
    PRIVATE_IP=$(aws ec2 run-instances --image-id ${AMI_ID} --instance-type t3.micro  --security-group-ids ${SGID}  --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=${COMPONENT}}]" --instance-market-options "MarketType=spot, SpotOptions={SpotInstanceType=persistent,InstanceInterruptionBehavior=stop}"| jq '.Instances[].PrivateIpAddress' | sed -e 's/"//g')

    echo "Private IP of the created machine is $PRIVATE_IP"
    echo "Spot Instance $COMPONENT is ready: "
    echo "Creating Route53 Record . . . . :"

    sed -e "s/PRIVATEIP/${PRIVATE_IP}/" -e "s/COMPONENT/${COMPONENT}/" r53.json  >/tmp/record.json 
    aws route53 change-resource-record-sets --hosted-zone-id ${ZONEID} --change-batch file:///tmp/record.json | jq 
}

if [ "$1" == "all" ] ; then 
    for component in catalogue cart shipping mongodb payment rabbitmq redis mysql user frontend; do 
        COMPONENT=$component
        # calling function
        create-server
     done
else 
     create-server
fi 